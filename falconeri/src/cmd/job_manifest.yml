---
# Batch job template for falconeri jobs.
#
# This is a YAML file processed using handlebars. See
# https://docs.rs/handlebars and https://handlebarsjs.com/
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{job.job_name}}"
spec:
  parallelism: {{pipeline_spec.parallelism_spec.constant}}
  template:
    spec:
      nodeSelector:
{{#each pipeline_spec.node_selector}}
        "{{@key}}": "{{this}}"
{{/each}}
      containers:
      - name: worker
        image: "{{pipeline_spec.transform.image}}"
        command: ["/usr/local/bin/falconeri-worker", "{{job.id}}"]
        resources:
          requests:
            memory: "{{pipeline_spec.resource_requests.memory}}"
            cpu: "{{millicpu pipeline_spec.resource_requests.cpu}}"
          limits:
            # Should always default to the same as the request, to prevent
            # surprise evictions.
            memory: "{{pipeline_spec.resource_requests.memory}}"
        env:
        - name: RUST_BACKTRACE
          value: "1"
        - name: RUST_LOG
          value: "falconeri_common=trace,falconeri_worker=trace"
        - name: FALCONERI_NODE_NAME
          valueFrom:
            fieldRef:
              # This does not seem to currently work.
              fieldPath: spec.nodeName
        - name: FALCONERI_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - mountPath: /etc/falconeri/secrets
          name: secrets
        - mountPath: /pfs
          name: pfs
        - mountPath: /scratch
          name: scratch
      restartPolicy: Never
      volumes:
      - name: pfs
        emptyDir: {}
      - name: scratch
        emptyDir: {}
      - name: secrets
        secret:
          secretName: falconeri
  backoffLimit: 4
